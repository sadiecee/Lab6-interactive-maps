# -*- coding: utf-8 -*-
"""lab5_chlorplethmaps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q5uLUD73sW7UnS2SZwJEXrOvCCYhV2TY
"""

'''
Name: Sadie Murray
Python Version 3
Date: 5/20/2021
Summary: The goal of this code is to familiarize myself with the folium, pandas and json libraries for creating and editing maps and GIS data 
using python. The first few code blocks demonstrate different tools and types of mapping that can be accomplished. The final code block is my 
final map, which overlays an unemployment by state map with the starbucks zip codes map of LA. These maps take CSV and GeoJson data as an 
input and produce a map as an output. 
'''

# Upload local script to Colab - running this creates a "choose file" button to upload local files.
from google.colab import files
uploaded = files.upload()

import folium
import pandas as pd
import json
from folium import plugins

df = pd.read_csv('starbucksInLACounty.csv')

with open('laMap.geojson') as f:
    laArea = json.load(f)

# group the starbucks dataframe by zip code and count the number of stores in each zip code
numStoresSeries = df.groupby('zip').count().id

# initialize an empty dataframe to store this new data
numStoresByZip = pd.DataFrame()

# populate the new dataframe with a 'zipcode' column and a 'numStores' column
numStoresByZip['zipcode'] = [str(i) for i in numStoresSeries.index]
numStoresByZip['numStores'] = numStoresSeries.values

# Initiatlize a new map.
laMap = folium.Map(location=[34.0522,-118.2437], tiles='cartodbpositron', zoom_start=9, attr ='<a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://public.carto.com/viz/397fd294-a82b-4470-90cc-6153ebad5bf6/embed_map">Positron by Carto</a> | Data from <a href = "https://github.com/ritvikmath/StarbucksStoreScraping">Ritvik Kharkar</a>')

# Create the choropleth map. Key components have explanatory comments.
folium.Choropleth(
    geo_data = 'laZips.geojson',         # the geojson which you want to draw on the map [in our case it is the zipcodes in LA County]
    name='choropleth',
    data= numStoresByZip,                # the pandas dataframe which contains the zipcode information and the values of the variable you want to plot on the choropleth
    columns=['zipcode', 'numStores'],    # the columns from the dataframe that you want to use
    nan_fill_color='grey',               # fill color for null values
    nan_fill_opacity=0.4,                # opacity for null values
    key_on='feature.properties.zipcode', # the common key between one of your columns and an attribute in the geojson. This is how python knows which dataframe row matches up to which zipcode in the geojson
    fill_color='YlOrRd',                 # Try some other colors: 'YlGn', 'OrRd', 'BuGn' 'BuPu', 'GnBu', 'PuBu', 'PuBuGn', 'PuRd', 'RdPu', 'YlGn', 'YlGnBu', 'YlOrBr', 'YlOrRd'.
    fill_opacity = 0.7,                  # fill color for data values
    line_opacity = 0.2,                  # opacity for data values
    legend_name = 'Number of Starbucks'
).add_to(laMap)

folium.LayerControl().add_to(laMap)

# Display your map
laMap

# initialize the map around LA County
laMap = folium.Map(location=[34.0522,-118.2437], tiles='Stamen Toner', zoom_start=9)

# add the shape of LA County to the map
folium.GeoJson(laArea).add_to(laMap)

# for each row in the Starbucks dataset, plot the corresponding latitude and longitude on the map
for i,row in df.iterrows():
    folium.CircleMarker((row.latitude,row.longitude), radius=3, weight=2, color='red', fill_color='red', fill_opacity=.5).add_to(laMap)

# Display your map   
laMap

#establishes the URL that will be generated to pull the data from 
url = 'https://raw.githubusercontent.com/python-visualization/folium/master/examples/data' #see files at https://github.com/python-visualization/folium/tree/master/examples/data
state_geo = f'{url}/us-states.json'
state_unemployment = f'{url}/US_Unemployment_Oct2012.csv'
state_data = pd.read_csv(state_unemployment)

#creates a statemap zoomed into a certain location using a certain basemap
statemap = folium.Map(location=[48, -102], tiles='Stamen Terrain', zoom_start=4)

#details the chloropleth settings 
folium.Choropleth(
    geo_data=state_geo,                                                         #the GeoJSOn overlay
    name='choropleth',
    data=state_data,                                                            #base data you are using using to bind to GeoJSON
    columns=['State', 'Unemployment'],                                          #columns of the data to be bound
    key_on='feature.id',                                                        #unique key field ID
    highlight=True,                                                             #boolean value that highlights an area when hovering over it
    fill_color='OrRd',                                                          #establishes orange to red color palette
    fill_opacity=0.5,                                                           #fill opacity .5
    line_opacity=1.0,                                                           #line opacity 1
    nan_fill_color='grey',                                                      #null values are grey with a fill of .6 opacity
    overlay=True,                                                               #boolean that lets you overlay other data
    legend_name='2012 Unemployment Rate (%)'                                    #name of legend for basemap 
).add_to(statemap)

folium.LayerControl().add_to(statemap)                                          #adds the layer control to the map 

# for each row in the Starbucks dataset, plot the corresponding latitude and longitude on the map
for i,row in df.iterrows():
    folium.CircleMarker((row.latitude,row.longitude), radius=2, weight=.5, color='white', fill_color='black', fill_opacity=1.0).add_to(statemap)

#render your map
statemap

